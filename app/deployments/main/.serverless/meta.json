{
  "/Users/rdamaj/repos/potion/potion-backend/app/deployments/main/serverless.yml": {
    "versionFramework": "4.6.2",
    "servicePath": "/Users/rdamaj/repos/potion/potion-backend/app/deployments/main/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "potion-backend-template",
      "configValidationMode": "warn",
      "package": {
        "individually": true,
        "patterns": [
          "!node_modules/**",
          "../../../package.json",
          "../../../app/**"
        ],
        "artifactsS3KeyDirname": "serverless/potion-backend-template/prod/code-artifacts",
        "deploymentBucket": "potion-backend",
        "artifactDirectoryName": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z"
      },
      "provider": {
        "name": "aws",
        "timeout": 15,
        "deploymentBucket": "potion-backend",
        "runtime": "nodejs18.x",
        "architecture": "arm64",
        "stage": "prod",
        "region": "us-east-1",
        "memorySize": 2048,
        "profile": "default",
        "logs": {
          "restApi": true
        },
        "tracing": {
          "lambda": true
        },
        "environment": {
          "STAGE": "prod",
          "NODE_OPTIONS": "--enable-source-maps --experimental-vm-modules"
        },
        "versionFunctions": true,
        "deploymentBucketObject": {
          "name": "potion-backend"
        },
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "WalletsSyncJobLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/potion-backend-template-prod-walletsSyncJob"
              }
            },
            "WalletsTradesAPILogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/potion-backend-template-prod-walletsTradesAPI"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "potion-backend-template",
                          "prod",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords"
                          ],
                          "Resource": [
                            "*"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "potion-backend-template",
                      "prod",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "DependenciesLambdaLayer": {
              "Type": "AWS::Lambda::LayerVersion",
              "Properties": {
                "Content": {
                  "S3Bucket": "potion-backend",
                  "S3Key": "serverless/potion-backend-template/prod/1739649023780-2025-02-15T19:50:23.780Z/layer.zip"
                },
                "LayerName": "potion-backend-template-prod-dependencies"
              }
            },
            "WalletsSyncJobLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "potion-backend",
                  "S3Key": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z/walletsSyncJob.zip"
                },
                "Handler": "wallets/jobs/sync.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "potion-backend-template-prod-walletsSyncJob",
                "MemorySize": 2048,
                "Timeout": 15,
                "Architectures": [
                  "arm64"
                ],
                "TracingConfig": {
                  "Mode": "Active"
                },
                "Environment": {
                  "Variables": {
                    "STAGE": "prod",
                    "NODE_OPTIONS": "--enable-source-maps --experimental-vm-modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "WalletsSyncJobLogGroup"
              ]
            },
            "WalletsTradesAPILambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "potion-backend",
                  "S3Key": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z/walletsTradesAPI.zip"
                },
                "Handler": "app/deployments/main/wallets/api/trades.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "potion-backend-template-prod-walletsTradesAPI",
                "MemorySize": 2048,
                "Timeout": 15,
                "Architectures": [
                  "arm64"
                ],
                "TracingConfig": {
                  "Mode": "Active"
                },
                "Environment": {
                  "Variables": {
                    "STAGE": "prod",
                    "NODE_OPTIONS": "--enable-source-maps --experimental-vm-modules"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  {
                    "Ref": "DependenciesLambdaLayer"
                  }
                ]
              },
              "DependsOn": [
                "WalletsTradesAPILogGroup"
              ]
            },
            "WalletsSyncJobLambdaVersionUaGpNrSs4wfcA0IW5UZLWrgvpiOduLxm04xi4BRq70": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "WalletsSyncJobLambdaFunction"
                },
                "CodeSha256": "X8wxfxiJ3RDLGdATnhuHVw5yZ2VXV65kVDWeubxV3e0="
              }
            },
            "WalletsTradesAPILambdaVersionHReWGsHxEv6WT16zJ9xLoXru27U5NpMoKKX9ilC7wfw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "WalletsTradesAPILambdaFunction"
                },
                "CodeSha256": "X8wxfxiJ3RDLGdATnhuHVw5yZ2VXV65kVDWeubxV3e0="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "prod-potion-backend-template",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceWallets": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "wallets",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceWalletsTrades": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceWallets"
                },
                "PathPart": "trades",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodWalletsTradesOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceWalletsTrades"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodWalletsTradesGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceWalletsTrades"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "WalletsTradesAPILambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "WalletsTradesAPILambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1739649550336": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "prod"
              },
              "DependsOn": [
                "ApiGatewayMethodWalletsTradesOptions",
                "ApiGatewayMethodWalletsTradesGet"
              ]
            },
            "WalletsTradesAPILambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "WalletsTradesAPILambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ApiGatewayLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/api-gateway/potion-backend-template-prod"
              }
            },
            "CustomApiGatewayAccountCloudWatchRole": {
              "Type": "Custom::ApiGatewayAccountRole",
              "Version": "1.0",
              "Properties": {
                "ServiceToken": "<REDACTED>"
              }
            },
            "IamRoleCustomResourcesLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "prod",
                          "potion-backend-template",
                          "custom-resources-lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                "iam:",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                "role/*"
                              ]
                            ]
                          },
                          "Action": [
                            "iam:AttachRolePolicy",
                            "iam:CreateRole",
                            "iam:ListAttachedRolePolicies",
                            "iam:PassRole"
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                "apigateway:*::/account"
                              ]
                            ]
                          },
                          "Action": [
                            "apigateway:GET",
                            "apigateway:PATCH"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "potion-backend",
                  "S3Key": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z/custom-resources.zip"
                },
                "FunctionName": "potion-backend-template-prod-custom-resource-apigw-cw-role",
                "Handler": "api-gateway-cloud-watch-role/handler.handler",
                "MemorySize": 1024,
                "Runtime": "nodejs20.x",
                "Timeout": 180,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleCustomResourcesLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "IamRoleCustomResourcesLambdaExecution",
                "CustomDashresourceDashapigwDashcwDashroleLogGroup"
              ]
            },
            "CustomDashresourceDashapigwDashcwDashroleLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/potion-backend-template-prod-custom-resource-apigw-cw-role"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "potion-backend",
              "Export": {
                "Name": "sls-potion-backend-template-prod-ServerlessDeploymentBucketName"
              }
            },
            "DependenciesLambdaLayerQualifiedArn": {
              "Description": "Current Lambda layer version",
              "Value": {
                "Ref": "DependenciesLambdaLayer"
              },
              "Export": {
                "Name": "sls-potion-backend-template-prod-DependenciesLambdaLayerQualifiedArn"
              }
            },
            "DependenciesLambdaLayerHash": {
              "Description": "Current Lambda layer hash",
              "Value": "71cfb0048047da42fe3b9c570e6f14380cf8b09b",
              "Export": {
                "Name": "sls-potion-backend-template-prod-DependenciesLambdaLayerHash"
              }
            },
            "DependenciesLambdaLayerS3Key": {
              "Description": "Current Lambda layer S3Key",
              "Value": "serverless/potion-backend-template/prod/1739649023780-2025-02-15T19:50:23.780Z/layer.zip",
              "Export": {
                "Name": "sls-potion-backend-template-prod-DependenciesLambdaLayerS3Key"
              }
            },
            "WalletsSyncJobLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "WalletsSyncJobLambdaVersionUaGpNrSs4wfcA0IW5UZLWrgvpiOduLxm04xi4BRq70"
              },
              "Export": {
                "Name": "sls-potion-backend-template-prod-WalletsSyncJobLambdaFunctionQualifiedArn"
              }
            },
            "WalletsTradesAPILambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "WalletsTradesAPILambdaVersionHReWGsHxEv6WT16zJ9xLoXru27U5NpMoKKX9ilC7wfw"
              },
              "Export": {
                "Name": "sls-potion-backend-template-prod-WalletsTradesAPILambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/prod"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-potion-backend-template-prod-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "custom": {
        "prune": {
          "automatic": true,
          "number": 10
        },
        "stages": [
          "staging",
          "prod"
        ]
      },
      "functions": {
        "walletsSyncJob": {
          "handler": "wallets/jobs/sync.handler",
          "events": [],
          "name": "potion-backend-template-prod-walletsSyncJob",
          "package": {
            "artifact": ".serverless/walletsSyncJob.zip"
          },
          "memory": 2048,
          "timeout": 15,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "WalletsSyncJobLambdaVersionUaGpNrSs4wfcA0IW5UZLWrgvpiOduLxm04xi4BRq70"
        },
        "walletsTradesAPI": {
          "handler": "app/deployments/main/wallets/api/trades.handler",
          "events": [
            {
              "http": {
                "path": "wallets/trades",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "layers": [
            {
              "Ref": "DependenciesLambdaLayer"
            }
          ],
          "name": "potion-backend-template-prod-walletsTradesAPI",
          "package": {
            "artifact": ".serverless/walletsTradesAPI.zip"
          },
          "memory": 2048,
          "timeout": 15,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "WalletsTradesAPILambdaVersionHReWGsHxEv6WT16zJ9xLoXru27U5NpMoKKX9ilC7wfw"
        }
      },
      "plugins": [
        "serverless-prune-plugin"
      ],
      "layers": {
        "dependencies": {
          "path": "../../../lambda-layer",
          "name": "potion-backend-template-prod-dependencies",
          "package": {
            "artifact": "../../../lambda-layer/layer.zip"
          },
          "artifactAlreadyUploaded": true
        }
      }
    },
    "provider": {
      "name": "aws",
      "timeout": 15,
      "deploymentBucket": "potion-backend",
      "runtime": "nodejs18.x",
      "architecture": "arm64",
      "stage": "prod",
      "region": "us-east-1",
      "memorySize": 2048,
      "profile": "default",
      "logs": {
        "restApi": true
      },
      "tracing": {
        "lambda": true
      },
      "environment": {
        "STAGE": "prod",
        "NODE_OPTIONS": "--enable-source-maps --experimental-vm-modules"
      },
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "potion-backend"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "WalletsSyncJobLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/potion-backend-template-prod-walletsSyncJob"
            }
          },
          "WalletsTradesAPILogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/potion-backend-template-prod-walletsTradesAPI"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "potion-backend-template",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords"
                        ],
                        "Resource": [
                          "*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "potion-backend-template",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "DependenciesLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": "potion-backend",
                "S3Key": "serverless/potion-backend-template/prod/1739649023780-2025-02-15T19:50:23.780Z/layer.zip"
              },
              "LayerName": "potion-backend-template-prod-dependencies"
            }
          },
          "WalletsSyncJobLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "potion-backend",
                "S3Key": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z/walletsSyncJob.zip"
              },
              "Handler": "wallets/jobs/sync.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "potion-backend-template-prod-walletsSyncJob",
              "MemorySize": 2048,
              "Timeout": 15,
              "Architectures": [
                "arm64"
              ],
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "STAGE": "prod",
                  "NODE_OPTIONS": "--enable-source-maps --experimental-vm-modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WalletsSyncJobLogGroup"
            ]
          },
          "WalletsTradesAPILambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "potion-backend",
                "S3Key": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z/walletsTradesAPI.zip"
              },
              "Handler": "app/deployments/main/wallets/api/trades.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "potion-backend-template-prod-walletsTradesAPI",
              "MemorySize": 2048,
              "Timeout": 15,
              "Architectures": [
                "arm64"
              ],
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "STAGE": "prod",
                  "NODE_OPTIONS": "--enable-source-maps --experimental-vm-modules"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "DependenciesLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "WalletsTradesAPILogGroup"
            ]
          },
          "WalletsSyncJobLambdaVersionUaGpNrSs4wfcA0IW5UZLWrgvpiOduLxm04xi4BRq70": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WalletsSyncJobLambdaFunction"
              },
              "CodeSha256": "X8wxfxiJ3RDLGdATnhuHVw5yZ2VXV65kVDWeubxV3e0="
            }
          },
          "WalletsTradesAPILambdaVersionHReWGsHxEv6WT16zJ9xLoXru27U5NpMoKKX9ilC7wfw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WalletsTradesAPILambdaFunction"
              },
              "CodeSha256": "X8wxfxiJ3RDLGdATnhuHVw5yZ2VXV65kVDWeubxV3e0="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "prod-potion-backend-template",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceWallets": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "wallets",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceWalletsTrades": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceWallets"
              },
              "PathPart": "trades",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodWalletsTradesOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceWalletsTrades"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodWalletsTradesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceWalletsTrades"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WalletsTradesAPILambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "WalletsTradesAPILambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1739649550336": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "prod"
            },
            "DependsOn": [
              "ApiGatewayMethodWalletsTradesOptions",
              "ApiGatewayMethodWalletsTradesGet"
            ]
          },
          "WalletsTradesAPILambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WalletsTradesAPILambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiGatewayLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/api-gateway/potion-backend-template-prod"
            }
          },
          "CustomApiGatewayAccountCloudWatchRole": {
            "Type": "Custom::ApiGatewayAccountRole",
            "Version": "1.0",
            "Properties": {
              "ServiceToken": "<REDACTED>"
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "prod",
                        "potion-backend-template",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "iam:",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "role/*"
                            ]
                          ]
                        },
                        "Action": [
                          "iam:AttachRolePolicy",
                          "iam:CreateRole",
                          "iam:ListAttachedRolePolicies",
                          "iam:PassRole"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "apigateway:*::/account"
                            ]
                          ]
                        },
                        "Action": [
                          "apigateway:GET",
                          "apigateway:PATCH"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "potion-backend",
                "S3Key": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z/custom-resources.zip"
              },
              "FunctionName": "potion-backend-template-prod-custom-resource-apigw-cw-role",
              "Handler": "api-gateway-cloud-watch-role/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs20.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution",
              "CustomDashresourceDashapigwDashcwDashroleLogGroup"
            ]
          },
          "CustomDashresourceDashapigwDashcwDashroleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/potion-backend-template-prod-custom-resource-apigw-cw-role"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "potion-backend",
            "Export": {
              "Name": "sls-potion-backend-template-prod-ServerlessDeploymentBucketName"
            }
          },
          "DependenciesLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "DependenciesLambdaLayer"
            },
            "Export": {
              "Name": "sls-potion-backend-template-prod-DependenciesLambdaLayerQualifiedArn"
            }
          },
          "DependenciesLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "71cfb0048047da42fe3b9c570e6f14380cf8b09b",
            "Export": {
              "Name": "sls-potion-backend-template-prod-DependenciesLambdaLayerHash"
            }
          },
          "DependenciesLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/potion-backend-template/prod/1739649023780-2025-02-15T19:50:23.780Z/layer.zip",
            "Export": {
              "Name": "sls-potion-backend-template-prod-DependenciesLambdaLayerS3Key"
            }
          },
          "WalletsSyncJobLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WalletsSyncJobLambdaVersionUaGpNrSs4wfcA0IW5UZLWrgvpiOduLxm04xi4BRq70"
            },
            "Export": {
              "Name": "sls-potion-backend-template-prod-WalletsSyncJobLambdaFunctionQualifiedArn"
            }
          },
          "WalletsTradesAPILambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WalletsTradesAPILambdaVersionHReWGsHxEv6WT16zJ9xLoXru27U5NpMoKKX9ilC7wfw"
            },
            "Export": {
              "Name": "sls-potion-backend-template-prod-WalletsTradesAPILambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/prod"
                ]
              ]
            },
            "Export": {
              "Name": "sls-potion-backend-template-prod-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: potion-backend-template\n\nconfigValidationMode: warn\n\npackage:\n  individually: true\n  patterns:\n    - '!node_modules/**'\n    - '../../../package.json'\n    - '../../../app/**'\n\nprovider:\n  name: aws\n  timeout: 15\n  deploymentBucket:\n    name: potion-backend\n  runtime: nodejs18.x\n  architecture: arm64\n  stage: ${opt:stage, \"staging\"}\n  region: us-east-1\n  memorySize: 2048\n  profile: default\n  logs:\n    restApi: true\n  tracing:\n    lambda: true\n  environment:\n    STAGE: ${opt:stage, self:provider.stage, \"dev\"}\n    NODE_OPTIONS: '--enable-source-maps --experimental-vm-modules'\n\n# Add this section to disable built-in esbuild\ncustom:\n  prune:\n    automatic: true\n    number: 10\n  stages:\n    - staging\n    - prod\n\nfunctions:\n  walletsSyncJob:\n    handler: wallets/jobs/sync.handler\n\n  walletsTradesAPI:\n    handler: app/deployments/main/wallets/api/trades.handler\n    events:\n      - http:\n          path: wallets/trades\n          method: get\n          cors: true\n    layers:\n      - {Ref: DependenciesLambdaLayer}\n\nplugins:\n  - serverless-prune-plugin\n\nlayers:\n  dependencies:\n    path: ../../../lambda-layer\n    name: ${self:service}-${opt:stage, 'dev'}-dependencies\n    package:\n      artifact: ../../../lambda-layer/layer.zip\n",
    "command": [
      "deploy"
    ],
    "options": {
      "stage": "prod"
    },
    "orgId": "ea04babd-f91b-46cc-b0fa-b9e9aae03233",
    "orgName": "blackswan",
    "userId": null,
    "serviceProviderAwsAccountId": "122895879341",
    "serviceProviderAwsCfStackName": "potion-backend-template-prod",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:122895879341:stack/potion-backend-template-prod/892023f0-ebce-11ef-90cd-1275215ae02f",
    "serviceProviderAwsCfStackCreated": "2025-02-15T18:56:16.916Z",
    "serviceProviderAwsCfStackUpdated": "2025-02-15T19:50:28.837Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "DependenciesLambdaLayerQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:122895879341:layer:potion-backend-template-prod-dependencies:1",
        "Description": "Current Lambda layer version",
        "ExportName": "sls-potion-backend-template-prod-DependenciesLambdaLayerQualifiedArn"
      },
      {
        "OutputKey": "DependenciesLambdaLayerS3Key",
        "OutputValue": "serverless/potion-backend-template/prod/1739649023780-2025-02-15T19:50:23.780Z/layer.zip",
        "Description": "Current Lambda layer S3Key",
        "ExportName": "sls-potion-backend-template-prod-DependenciesLambdaLayerS3Key"
      },
      {
        "OutputKey": "WalletsTradesAPILambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:122895879341:function:potion-backend-template-prod-walletsTradesAPI:7",
        "Description": "Current Lambda function version",
        "ExportName": "sls-potion-backend-template-prod-WalletsTradesAPILambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DependenciesLambdaLayerHash",
        "OutputValue": "71cfb0048047da42fe3b9c570e6f14380cf8b09b",
        "Description": "Current Lambda layer hash",
        "ExportName": "sls-potion-backend-template-prod-DependenciesLambdaLayerHash"
      },
      {
        "OutputKey": "WalletsSyncJobLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:122895879341:function:potion-backend-template-prod-walletsSyncJob:7",
        "Description": "Current Lambda function version",
        "ExportName": "sls-potion-backend-template-prod-WalletsSyncJobLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://nsqswzkdpe.execute-api.us-east-1.amazonaws.com/prod",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-potion-backend-template-prod-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "potion-backend",
        "ExportName": "sls-potion-backend-template-prod-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "WalletsSyncJobLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/potion-backend-template-prod-walletsSyncJob"
          }
        },
        "WalletsTradesAPILogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/potion-backend-template-prod-walletsTradesAPI"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "potion-backend-template",
                      "prod",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "xray:PutTraceSegments",
                        "xray:PutTelemetryRecords"
                      ],
                      "Resource": [
                        "*"
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "potion-backend-template",
                  "prod",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "DependenciesLambdaLayer": {
          "Type": "AWS::Lambda::LayerVersion",
          "Properties": {
            "Content": {
              "S3Bucket": "potion-backend",
              "S3Key": "serverless/potion-backend-template/prod/1739649023780-2025-02-15T19:50:23.780Z/layer.zip"
            },
            "LayerName": "potion-backend-template-prod-dependencies"
          }
        },
        "WalletsSyncJobLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "potion-backend",
              "S3Key": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z/walletsSyncJob.zip"
            },
            "Handler": "wallets/jobs/sync.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "potion-backend-template-prod-walletsSyncJob",
            "MemorySize": 2048,
            "Timeout": 15,
            "Architectures": [
              "arm64"
            ],
            "TracingConfig": {
              "Mode": "Active"
            },
            "Environment": {
              "Variables": {
                "STAGE": "prod",
                "NODE_OPTIONS": "--enable-source-maps --experimental-vm-modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "WalletsSyncJobLogGroup"
          ]
        },
        "WalletsTradesAPILambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "potion-backend",
              "S3Key": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z/walletsTradesAPI.zip"
            },
            "Handler": "app/deployments/main/wallets/api/trades.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "potion-backend-template-prod-walletsTradesAPI",
            "MemorySize": 2048,
            "Timeout": 15,
            "Architectures": [
              "arm64"
            ],
            "TracingConfig": {
              "Mode": "Active"
            },
            "Environment": {
              "Variables": {
                "STAGE": "prod",
                "NODE_OPTIONS": "--enable-source-maps --experimental-vm-modules"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              {
                "Ref": "DependenciesLambdaLayer"
              }
            ]
          },
          "DependsOn": [
            "WalletsTradesAPILogGroup"
          ]
        },
        "WalletsSyncJobLambdaVersionUaGpNrSs4wfcA0IW5UZLWrgvpiOduLxm04xi4BRq70": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "WalletsSyncJobLambdaFunction"
            },
            "CodeSha256": "X8wxfxiJ3RDLGdATnhuHVw5yZ2VXV65kVDWeubxV3e0="
          }
        },
        "WalletsTradesAPILambdaVersionHReWGsHxEv6WT16zJ9xLoXru27U5NpMoKKX9ilC7wfw": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "WalletsTradesAPILambdaFunction"
            },
            "CodeSha256": "X8wxfxiJ3RDLGdATnhuHVw5yZ2VXV65kVDWeubxV3e0="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "prod-potion-backend-template",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceWallets": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "wallets",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceWalletsTrades": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceWallets"
            },
            "PathPart": "trades",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodWalletsTradesOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceWalletsTrades"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodWalletsTradesGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceWalletsTrades"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WalletsTradesAPILambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "WalletsTradesAPILambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1739649550336": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "prod"
          },
          "DependsOn": [
            "ApiGatewayMethodWalletsTradesOptions",
            "ApiGatewayMethodWalletsTradesGet"
          ]
        },
        "WalletsTradesAPILambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "WalletsTradesAPILambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "ApiGatewayLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/api-gateway/potion-backend-template-prod"
          }
        },
        "CustomApiGatewayAccountCloudWatchRole": {
          "Type": "Custom::ApiGatewayAccountRole",
          "Version": "1.0",
          "Properties": {
            "ServiceToken": "<REDACTED>"
          }
        },
        "IamRoleCustomResourcesLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "prod",
                      "potion-backend-template",
                      "custom-resources-lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/potion-backend-template-prod*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Resource": {
                        "Fn::Join": [
                          ":",
                          [
                            "arn",
                            {
                              "Ref": "AWS::Partition"
                            },
                            "iam:",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            "role/*"
                          ]
                        ]
                      },
                      "Action": [
                        "iam:AttachRolePolicy",
                        "iam:CreateRole",
                        "iam:ListAttachedRolePolicies",
                        "iam:PassRole"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Resource": {
                        "Fn::Join": [
                          ":",
                          [
                            "arn",
                            {
                              "Ref": "AWS::Partition"
                            },
                            "apigateway:*::/account"
                          ]
                        ]
                      },
                      "Action": [
                        "apigateway:GET",
                        "apigateway:PATCH"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "potion-backend",
              "S3Key": "serverless/potion-backend-template/prod/1739649551705-2025-02-15T19:59:11.705Z/custom-resources.zip"
            },
            "FunctionName": "potion-backend-template-prod-custom-resource-apigw-cw-role",
            "Handler": "api-gateway-cloud-watch-role/handler.handler",
            "MemorySize": 1024,
            "Runtime": "nodejs20.x",
            "Timeout": 180,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleCustomResourcesLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "IamRoleCustomResourcesLambdaExecution",
            "CustomDashresourceDashapigwDashcwDashroleLogGroup"
          ]
        },
        "CustomDashresourceDashapigwDashcwDashroleLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/potion-backend-template-prod-custom-resource-apigw-cw-role"
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "potion-backend",
          "Export": {
            "Name": "sls-potion-backend-template-prod-ServerlessDeploymentBucketName"
          }
        },
        "DependenciesLambdaLayerQualifiedArn": {
          "Description": "Current Lambda layer version",
          "Value": {
            "Ref": "DependenciesLambdaLayer"
          },
          "Export": {
            "Name": "sls-potion-backend-template-prod-DependenciesLambdaLayerQualifiedArn"
          }
        },
        "DependenciesLambdaLayerHash": {
          "Description": "Current Lambda layer hash",
          "Value": "71cfb0048047da42fe3b9c570e6f14380cf8b09b",
          "Export": {
            "Name": "sls-potion-backend-template-prod-DependenciesLambdaLayerHash"
          }
        },
        "DependenciesLambdaLayerS3Key": {
          "Description": "Current Lambda layer S3Key",
          "Value": "serverless/potion-backend-template/prod/1739649023780-2025-02-15T19:50:23.780Z/layer.zip",
          "Export": {
            "Name": "sls-potion-backend-template-prod-DependenciesLambdaLayerS3Key"
          }
        },
        "WalletsSyncJobLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "WalletsSyncJobLambdaVersionUaGpNrSs4wfcA0IW5UZLWrgvpiOduLxm04xi4BRq70"
          },
          "Export": {
            "Name": "sls-potion-backend-template-prod-WalletsSyncJobLambdaFunctionQualifiedArn"
          }
        },
        "WalletsTradesAPILambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "WalletsTradesAPILambdaVersionHReWGsHxEv6WT16zJ9xLoXru27U5NpMoKKX9ilC7wfw"
          },
          "Export": {
            "Name": "sls-potion-backend-template-prod-WalletsTradesAPILambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/prod"
              ]
            ]
          },
          "Export": {
            "Name": "sls-potion-backend-template-prod-ServiceEndpoint"
          }
        }
      }
    }
  }
}